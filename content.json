{"meta":{"title":"yobome's blog","subtitle":"Programmer","description":"明日も晴れるかな","author":"Emo","url":"https://yobome.top","root":"/"},"pages":[{"title":"about","date":"2020-04-07T17:11:47.000Z","updated":"2020-04-15T07:22:31.558Z","comments":false,"path":"about/index.html","permalink":"https://yobome.top/about/index.html","excerpt":"","text":"Programmer/ Music Lover/ Gamer/ Reader."},{"title":"categories","date":"2020-04-06T11:39:59.000Z","updated":"2020-04-06T11:42:37.532Z","comments":false,"path":"categories/index.html","permalink":"https://yobome.top/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-04-06T11:38:42.000Z","updated":"2020-04-06T11:42:29.459Z","comments":false,"path":"tags/index.html","permalink":"https://yobome.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"redis_set","slug":"redis-set","date":"2020-04-30T01:06:47.000Z","updated":"2020-04-30T01:07:45.430Z","comments":true,"path":"2020/04/30/redis-set/","link":"","permalink":"https://yobome.top/2020/04/30/redis-set/","excerpt":"","text":"set 类型set 类型新的存储需求：存储大量的数据，在查询方面提供更高的效率需要的存储结构：能够保存大量的数据，高效的内部存储机制，便于查询set类型：与hash存储结构完全相同，仅存储键，不存储值（nil），并且值是不允许重复的set 类型数据的基本操作添加数据sadd key member1 [member2]获取全部数据smembers key删除数据srem key member1 [member2]获取集合数据总量scard key判断集合中是否包含指定数据sismember key memberset 类型数据的扩展操作随机获取集合中指定数量的数据srandmember key [count] 随机获取集合中的某个数据并将该数据移除集合spop key [count]Tips：redis 应用于随机推荐类信息检索，例如热点歌单推荐，热点新闻推荐，热卖旅游线路，应用APP推荐，大V推荐等求两个集合的交、并、差集sinter key1 [key2] sunion key1 [key2] sdiff key1 [key2]求两个集合的交、并、差集并存储到指定集合中sinterstore destination key1 [key2] sunionstore destination key1 [key2] sdiffstore destination key1 [key2]将指定数据从原始集合中移动到目标集合中smove source destination memberTips:redis 应用于同类信息的关联搜索，二度关联搜索，深度关联搜索显示共同关注（一度）显示共同好友（一度）由用户A出发，获取到好友用户B的好友信息列表（一度）由用户A出发，获取到好友用户B的购物清单列表（二度）由用户A出发，获取到好友用户B的游戏充值列表（二度）set 类型不允许数据重复，如果添加的数据在 set 中已经存在，将只保留一份set 类型数据操作的注意事项set 虽然与hash的存储结构相同，但是无法启用hash中存储值的空间set 类型应用场景//判断权限交叉的问题中，应计算出各角色权限的交集，然后让程序 get 到这个交集，再在业务逻辑中去查询所需要查询的权限是否在里面//而不是每次都传入一个数据到 redis 中用 sinter 比较 （降耦）// PV UV IP 统计利用set集合的数据去重特征，记录各种访问数据建立string类型数据，利用incr统计日访问量（PV）建立set模型，记录不同cookie数量（UV）建立set模型，记录不同IP数量（IP）//爬虫黑白名单基于经营战略设定问题用户发现、鉴别规则周期性更新满足规则的用户黑名单，加入set集合用户行为信息达到后与黑名单进行比对，确认行为去向黑名单过滤IP地址：应用于开放游客访问权限的信息源黑名单过滤设备信息：应用于限定访问设备的信息源黑名单过滤用户：应用于基于访问权限的信息源Tips：redis 应用于基于黑名单与白名单设定的服务控制","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"redis_list","slug":"redis-list","date":"2020-04-30T01:06:33.000Z","updated":"2020-04-30T01:07:33.962Z","comments":true,"path":"2020/04/30/redis-list/","link":"","permalink":"https://yobome.top/2020/04/30/redis-list/","excerpt":"","text":"list 类型数据存储需求：存储多个数据，并对数据进入存储空间的顺序进行区分需要的存储结构：一个存储空间保存多个数据，且通过数据可以体现进入顺序list类型：保存多个数据，底层使用双向链表存储结构实现list 类型数据基本操作添加/修改数据lpush key value1 [value2] …… rpush key value1 [value2] ……获取数据lrange key start stop lindex key index llen key获取并移除数据lpop key rpop keylist 类型数据扩展操作规定时间内获取并移除数据blpop key1 [key2] timeout brpop key1 [key2] timeout brpoplpush source destination timeout移除指定数据lrem key count valueTips：redis 应用于具有操作先后顺序的数据控制list 类型数据操作注意事项list 中保存的数据都是 string 类型的，数据总容量是有限的，最多 232 - 1 个元素 (4294967295)。list 具有索引的概念，但是操作数据时通常以队列的形式进行入队出队操作，或以栈的形式进行入栈出栈操作获取全部数据操作结束索引设置为 -1list 可以对数据进行分页操作，通常第一页的信息来自于 list，第 2 页及更多的信息通过数据库的形式加载list 类型应用场景依赖list的数据具有顺序的特征对信息进行管理使用队列模型解决多路信息汇总合并的问题使用栈模型解决最新消息的问题Tips：redis 应用于最新消息展示","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Redis 笔记（六）：hash","slug":"redis-hash","date":"2020-04-19T16:50:26.000Z","updated":"2020-04-19T16:52:15.485Z","comments":true,"path":"2020/04/20/redis-hash/","link":"","permalink":"https://yobome.top/2020/04/20/redis-hash/","excerpt":"","text":"hash 类型存储的困惑对象类数据的存储如果具有较频繁的更新需求操作会显得笨重key filed新的存储需求：对一系列存储的数据进行编组，方便管理，典型应用存储对象信息需要的存储结构：一个存储空间保存多个键值对数据hash 类型：底层使用哈希表结构实现数据存储hash 存储结构优化如果field数量较少，存储结构优化为类数组结构如果field数量较多，存储结构使用 HashMap 结构hash 类型数据的基本操作添加/修改数据hset key field value获取数据hget key field hgetall key删除数据hdel key field1 [field2]添加/修改多个数据hmset key field1 value1 field2 value2 …获取多个数据hmget key field1 field2 …获取哈希表中字段的数量hlen key获取哈希表中是否存在指定的字段hexists key fieldhash 类型数据的扩展操作获取哈希表中所有的字段名或字段值hkeys key hvals key设置指定字段的数值数据增加指定范围的值hincrby key field increment hincrbyfloat key field incrementhash 类型数据操作的注意事项hash类型下的value只能存储字符串，不允许存储其他数据类型，不存在嵌套现象。如果数据未获取到，对应的值为（nil）每个 hash 可以存储 232 - 1 个键值对hash类型十分贴近对象的数据存储形式，并且可以灵活添加删除对象属性。但hash设计初衷不是为了存储大量对象而设计的，切记不可滥用，更不可以将hash作为对象列表使用hgetall 操作可以获取全部属性，如果内部field过多，遍历整体数据效率就很会低，有可能成为数据访问瓶颈hash 类型应用场景电商购物车、商家售卖商品等。string 存储对象（json）与 hash 存储对象string 存储比较整体hash 适用于修改较频繁的场景","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Redis 笔记（五）：string","slug":"redis-string","date":"2020-04-18T08:31:11.000Z","updated":"2020-04-18T08:33:26.932Z","comments":true,"path":"2020/04/18/redis-string/","link":"","permalink":"https://yobome.top/2020/04/18/redis-string/","excerpt":"","text":"string 类型存储的数据：单个数据，最简单的、最常用的数据存储类型存储数据的格式：一个存储空间保存一个数据存储内容：通常使用字符串，如果字符串以整数的形式展示，可以作为数字操作使用string 类型数据的基本操作添加/修改数据：set key value获取数据：get key删除数据：del key添加/修改多个数据：mset key1 value1 key2 value2 ...获取多个数据：mget key1 key2 ...获取数据字符个数（字符串长度）：strlen key追加信息到原始信息后部（如果原始信息存在就追加，否则新建）：append key valuestring 类型数据的扩展操作业务场景一大型企业级应用中，分表操作是基本操作，使用多张表存储同类型数据，但是对应的主键 id 必须保证统一性，不能重复。 Orade数据库具有 sequence 设定，可以解决该问题，但是 MySQL 数据库并不具有类似的机制，那么如何解决？解决方案设置数值数据增加指定范围的值（只能操作整数）incr key incrby key increment incrbyfloat key increment设置数值数据减少指定范围的值desc key descby key incrementstring 作为数值操作string 在 redis 内部存储默认就是一个字符串，当遇到増减类操作 inr, decr 时会转成数值型进行计算。redis 所有的操作都是原子性的，采用单线程处理所有业务，命令是一个一个执行的，因此无需考虑并发带来的数据影响注意：按数值进行操作的数据，如果原始数据不能转成数值，或超越了 redis 数值上限范围，将报错。92233720368547758070 （java 中 long 型数据最大值，Long. MAX_VALUETips 1:redis用于控制数据库表主键 id，为数据库表主键提供生成策略，保证数据库表的主键唯一性此方案适用于所有数据库，且支持数据库集群。业务场景二「最强女生」启动海选投票，只能通过微信投票，每个微信号每 4 小时只能投 1 票。电商商家开启热门商品推荐，热门商品不能一直处于热门期，每种商品热门期维持 3 天，3 天后自动取消热门。新闻网站会出现热点新闻，热点新闻最大的特征是时效性，如何自动控制热点新闻的时效性。解决方案设置数据具有指定的生命周期setex key seconds value psetex key milliseconds valueTips 2:redis 控制数据的生命周期，通过数据是否失效控制业务行为，适用于所有具有时效性限定控制的操作string 类型数据操作的注意事项数据操作不成功的反馈与数据正常操作之间的差异表示裕兴结果是否成功(integer)0 -&gt; false 失败(integer)1 -&gt; true 成功表示运行结果值(integer)3 -&gt; 3 3个(integer)1 -&gt; 1 1个数据未获取到(nil) 等同于 null数据最大存储量512MB数据计算最大范围（java 中 long 的最大值）92233720368547758070string 类型应用场景业务场景主页高频访问信息显示控制，例如新浪微博大 V 主页显示粉丝数与微博数量解决方案在 redis 中为大 V 用户设定用户信息，以用户主键和属性值作为 key，后台设定定时刷新策略即可eg: user:id:3506728370:fans22 12210947 eg: user:id:3506728370:blogs 6164 eg: user:id:3506728370:focuss 83在 redis 中以 json 格式存储大 V 用户信息，定时刷新（也可以使用 hash 类型）eg: user:id:3506728370 {&quot;id&quot;:3506728370,&quot;name&quot;:&quot;春晚&quot;,&quot;fans&quot;:12210862,&quot;blogs&quot;:6164, &quot;focus&quot;:83}Tips 3：redis应用于各种结构型和非结构型高热度数据访问加速key 的设置约定数据库中的热点数据key命名惯例表名:主键名:主键值:字段名eg1:order:id:123456:name","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Redis 笔记（四）：Redis 数据类型","slug":"redis-datatype","date":"2020-04-16T16:33:30.000Z","updated":"2020-04-18T08:32:17.758Z","comments":true,"path":"2020/04/17/redis-datatype/","link":"","permalink":"https://yobome.top/2020/04/17/redis-datatype/","excerpt":"","text":"Redis 数据类型Redis 数据存储类型介绍业务数据的特殊性作为缓存使用原始业务功能设计秒杀618 活动双十一活动运营平台监控到的突发高频访问数据突发时政要闻，被强势关注围观高频、复杂的统计数据在线人数投票排行榜附加功能系统功能优化、升级：单服务器升级集群Session 管理Token 管理Redis 数据类型（五种常用）stringhashlistsetsorted_setredis 数据存储格式redis 自身是一个 Map，其中所有的数据都采用 key: value 的形式存储数据类型指的是存储的数据的类型，也就是 value 部分的类型，key 部分永远都是字符串","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Redis 笔记（三）：Redis 常用命令","slug":"redis-operation","date":"2020-04-16T16:33:20.000Z","updated":"2020-04-17T00:51:15.984Z","comments":true,"path":"2020/04/17/redis-operation/","link":"","permalink":"https://yobome.top/2020/04/17/redis-operation/","excerpt":"","text":"Redis 基本操作信息添加功能：设置 key，value 数据命令：set value key范例：set name testname信息查询功能：根据key查询对应的vaue，如果不存在，返回空（nil）命令：get key范例：get name帮助功能：获取命令帮助文档，获取组中所有命令信息名称命令：help 命令名称 help @组名退出客户端命令行模式功能：退出客户端命令：quit exit &lt;ESC&gt;","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Redis 笔记（二）：Redis 安装与使用","slug":"redis-install","date":"2020-04-16T16:33:05.000Z","updated":"2020-04-17T00:51:12.939Z","comments":true,"path":"2020/04/17/redis-install/","link":"","permalink":"https://yobome.top/2020/04/17/redis-install/","excerpt":"","text":"在 Vbox 下安装了 Ubuntu Server 后，继续安装 redis，并通过端口映射到主机，使其可以被外部访问（在 Goland 中写代码可以通过 redis 相关的库直接连接、调用）安装通过 apt 包安装：sudo apt-get update sudo apt-get install redis-server通过源码安装：# 以下步骤如果报错提示 permission denied，请使用 root 权限。# “make test” 不是必需的步骤，如果嫌麻烦可以直接从第四步跳到第七步，也就是在 redis 文件夹中执行 make 后，直接 make install。1. wget http://download.redis.io/releases/redis-5.0.8.tar.gz 2. tar -zxvf redis-5.0.8.tar.gz 3. cd redis-5.0.8/ 4. make # 在编译完成后，输出信息的最后一行为 &quot;Hint: It&apos;s a good idea to run &apos;make test&apos; ;)&quot; # 此时如果输入 &quot;make test&quot; 会报错 &quot;You need tcl 8.5 or newer in order to run the Redis test&quot; # 正确做法是先安装最新版的 tcl 4.1 cd .. 4.2 wget https://prdownloads.sourceforge.net/tcl/tcl8.6.10-src.tar.gz 4.3 tar zvxf tcl8.6.10-src.tar.gz 4.4 cd tcl8.6.10/unix 4.5 ./configure 4.6 make 4.7 make install 5. cd ../redis-5.0.8/ 6. make test 7. make install Redis 命令说明自带二进制相关命令介绍redis-benchmark # 性能测试工具 redis-check-aof # 用于修复对应格式文件的命令 redis-check-rdb # 同上 redis-cli # 启动 redis 客户端 redis-sentinel # 哨兵模式 redis-server # 启动 redis 服务启动 Redis 服务redis-server redis.conf # 如不填写 &quot;redis.conf&quot; 则使用默认配置文件 # 这里建议单独建立一个文件夹，copy 一份 redis.conf 过去 # 用 copy 的配置文件启动，这样可以保证根目录的配置文件完整性 # 上述启动方式为前台启动，并不方便。此时可以修改配置文件改为后台启动。 vim redis.conf daemonize no -&gt; yes # 以守护进程的形式运行","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Redis 笔记（一）：NoSQL 简介","slug":"redis-intro","date":"2020-04-16T16:27:25.000Z","updated":"2020-04-17T00:51:08.507Z","comments":true,"path":"2020/04/17/redis-intro/","link":"","permalink":"https://yobome.top/2020/04/17/redis-intro/","excerpt":"","text":"Redis 简介NoSQL 介绍问题现象海量用户高并发关系型数据库的缺点性能瓶颈：磁盘 IO 性能低下扩展瓶颈：数据关心复杂，扩展性差，不便于大规模集群解决思路降低磁盘IO次数 ———— 内存存储去除数据间关系 ———— 不存储关系，仅存储数据NoSQLNoSQL：即 Not-Only SQL（泛指非关系型数据库），作为关系型数据库的补充。作用：应对基于海量用户、数据前提下的数据处理特征：可扩容，可伸缩大数据量下高性能灵活的数据模型高可用常见 NoSQL 数据库：RedismemcacheHBaseMongoDBRedis 介绍概念：Redis（REmote Dictionary Server）是用 C 语言开发的一个开源的高性能键值对（key-value）数据库。特征：数据间没有必然的关联关系内部采用单线程机制进行工作高性能多数据类型支持字符串类型 string列表类型 list散列类型 hash集合类型 set有序集合类型 sorted_set持久化支持Redis 的应用为热点数据加速查询（主要场景），如热点商品、热点新闻、热点资讯、推广类等高访问量信息等任务队列，如秒杀、抢购、购票排队等即时信息查询，如各位排行榜、各类网站访问统计、公交到站信息、在线人数信息（聊天室、网站）、设备信号等时效性信息控制，如验证码控制、投票控制等分布式数据共享，如分布式集群架构中的 session分离消息队列分布式锁","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"}]},{"title":"Valine Admin 发送的邮件中的链接无法打开","slug":"valineadminissue","date":"2020-04-08T04:13:57.000Z","updated":"2020-04-08T04:21:47.551Z","comments":true,"path":"2020/04/08/valineadminissue/","link":"","permalink":"https://yobome.top/2020/04/08/valineadminissue/","excerpt":"","text":"Valine Admin 是 Valine 的修改版，相比原生 Valine 邮件通知功能更完善。原 Valine 发送的通知邮件里的按钮只能到达博客首页，无法到达相关文章页面；Valine Admin 还加入了垃圾评论过滤功能。在部署 Valine Admin 后，测试评论系统时，发现收到的通知邮件里的链接点击无效，无论是「查看回复的完整内容」还是开头的 blog 名。换邮箱、换 SMTP 服务器都无果，最后发现在云引擎的自定义环境变量中，「SITE_URL」值里的域名应该加上 https:// ，之前填写的是「yobome.top」，在换成「https://yobome.top」之后，重启实例，成功。","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"Blog","slug":"Tech/Blog","permalink":"https://yobome.top/categories/Tech/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://yobome.top/tags/blog/"},{"name":"踩坑","slug":"踩坑","permalink":"https://yobome.top/tags/%E8%B8%A9%E5%9D%91/"}]},{"title":"Next 升级小记","slug":"update-next-from-5-1-4","date":"2020-04-07T17:12:43.000Z","updated":"2020-04-07T18:03:37.238Z","comments":true,"path":"2020/04/08/update-next-from-5-1-4/","link":"","permalink":"https://yobome.top/2020/04/08/update-next-from-5-1-4/","excerpt":"","text":"由于一开始搭建的博客 Next 主题版本较老（5.1.4），会与一些插件的新版本出现兼容性问题，如 Valine 的 Visitor 无法显示。于是打算将 Next 升级到最新的 7.8.0 版本（较新的 Next 版本号已经无法在主题配置文件下查看，这里可以查看主题文件夹下的 package.json 文件）步骤克隆新版 Next 库在博客根目录下运行如下指令，其中后面的 “themes/next-reloaded” 为目标文件夹，可以自主命名，但必须在 themes 文件夹下git clone https://github.com/theme-next/hexo-theme-next themes/next-reloaded修改配置文件修改博客配置文件 (your_blog_path/_config.yml)theme: next-reloaded修改主题配置文件 (…/themes/next-reloaded/_config.yml)这里按照个人的插件配置、喜好来修改，附上我的修改：#关闭页面下方的「由 Hexo 驱动」等信息 powered: false #选择主题 scheme: Gemini #导航菜单设置 menu: home: / || fa fa-home categories: /categories/ || fa fa-th tags: /tags/ || fa fa-tags archives: /archives/ || fa fa-archive about: /about/ || fa fa-user #页面宽度，Gemini 的默认宽度为 240 width: 300 #开启 fancybox fancybox: true #开启评论系统与阅读量统计 valine: enable: true appid: your_app_id appkey: your_app_key notify: true verify: false placeholder: Comment Here~ avatar: retro guest_info: nick,mail,link pageSize: 10 language: visitor: true comment_count: true recordIP: false serverURLs: #post_meta_order: 0 #开启访客统计 busuanzi_count: enable: true total_visitors: true total_visitors_icon: fa fa-user total_views: true total_views_icon: fa fa-eye post_views: false post_views_icon: fa fa-eye #开启搜索插件 algolia_search: enable: true #更换 js 的 cdn fontawesome: //cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5/css/all.min.css jquery: //cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js fancybox: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js fancybox_css: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css lazyload: //cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js algolia_search: //cdn.jsdelivr.net/npm/algoliasearch@4/dist/algoliasearch-lite.umd.js instant_search: //cdn.jsdelivr.net/npm/instantsearch.js@4/dist/instantsearch.production.min.js velocity: //cdn.jsdelivr.net/npm/velocity-animate@1/velocity.min.js velocity_ui: //cdn.jsdelivr.net/npm/velocity-animate@1/velocity.ui.min.js踩坑Valine 评论开启后，标题下方显示的是「Valine: 0」而不是「评论数：0」在主题文件夹下的 languages 文件夹中，修改 zh-CN.yml，在 “post:” 下添加子字段 “comments.valine: 评论数”symbols_count_time 在开启后显示「阅读时长 ≈ NaN:aN」在博客配置文件下添加如下字段：12345symbols_count_time:symbols: true #显示文章字数time: true #显示文章所需阅读时间total_symbols: true #在页面底部显示网站文章总字数total_time: true #在页面底部显示网站总阅读时间在主题配置文件下添加如下字段：1234567symbols_count_time:separated_meta: trueitem_text_post: true #标题下方显示文章字数item_text_total: false #标题下方显示网站总字数#如果是中文博客，官方建议以下数值分别设置为 2、300awl: 4 #默认字符长度 Average Word Length，中文为2。wpm: 275 #默认阅读速度 Words Per Minute大功告成！如果还有什么遗漏的地方想到了再补充，有问题欢迎留言或者邮箱联系我。","categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"Blog","slug":"Tech/Blog","permalink":"https://yobome.top/categories/Tech/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://yobome.top/tags/blog/"},{"name":"踩坑","slug":"踩坑","permalink":"https://yobome.top/tags/%E8%B8%A9%E5%9D%91/"}]}],"categories":[{"name":"Tech","slug":"Tech","permalink":"https://yobome.top/categories/Tech/"},{"name":"IT","slug":"Tech/IT","permalink":"https://yobome.top/categories/Tech/IT/"},{"name":"Database","slug":"Tech/IT/Database","permalink":"https://yobome.top/categories/Tech/IT/Database/"},{"name":"Blog","slug":"Tech/Blog","permalink":"https://yobome.top/categories/Tech/Blog/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://yobome.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"redis","slug":"redis","permalink":"https://yobome.top/tags/redis/"},{"name":"blog","slug":"blog","permalink":"https://yobome.top/tags/blog/"},{"name":"踩坑","slug":"踩坑","permalink":"https://yobome.top/tags/%E8%B8%A9%E5%9D%91/"}]}